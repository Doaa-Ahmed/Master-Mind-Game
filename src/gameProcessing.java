
class gameProcessing{
	boolean winning;
	boolean loosing=!winning;
	int ordered;
	//A function to return true if the element is in the pattern generated by computer
	public int validateColor(patternUser user,patternComputer computer){//TESTED AND is Working xD
		//THIS would be better changed to int return type
		int count=0;
		for(int i=0;i<pattern.size;i++){
			if (computer.isAvailable(user.patternList.get(i))&&(!(computer.patternList.get(i).equals(user.patternList.get(i)))))
				count ++;
		}
		return count;
		//get the first element in the list then compare it with each element in the computer pattern
		
	}
	public int validateOrder(patternUser user,patternComputer computer){//Tested AND IS WORKING:D
		ordered=0;
		for(int i=0;i<pattern.size;i++)
		{
			if(user.patternList.get(i).equals(computer.patternList.get(i)))
				ordered++;
		}
		return ordered;
		//compare each object with its parallel obj in the pattern from computer
		//if the objects have the same indicies return true
	}
	public boolean isWinning(){
		if(ordered==pattern.size)
			return true;
		else return false;
		//if (validateOrder==size) ;
		//winning =true
		
	}
	public boolean isloosing(){
		if(!isWinning())
			return true;
		else return false;
		
	}
}